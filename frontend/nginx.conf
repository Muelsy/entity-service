user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '[$time_local] [$status] - $remote_addr - "$request" '
                      '$request_length $bytes_sent $body_bytes_sent $request_time "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  300;

    proxy_connect_timeout 600s;

    proxy_read_timeout 600s;

    # We turn gzip compression on!
    gzip  on;

    client_max_body_size 10000m;
    client_body_buffer_size 100m;

    # rate limiting
    limit_req_zone $binary_remote_addr zone=backend:10m rate=10r/s;

    #include /etc/nginx/conf.d/*.conf;

    # Handle requests on port 8851
    server {
      listen 8851;

      # Handle all api locations
      location /api/v1/ {

        # apply rate limiting
        limit_req zone=backend burst=3;

        # Pass the request to Gunicorn/Flask app
        proxy_pass http://{{TARGET_SERVICE}}:8000/;
        proxy_redirect     off;

        # Set some HTTP headers so that our app knows where the
        # request really came from
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }


      #location /monitor/ {
      #  rewrite ^/monitor/(.*)$ /$1 break;
      #  # Pass the request to celery's monitoring app "flower"
      #  proxy_pass http://monitor:8888/;
      #  proxy_set_header Host $host;
      #}

      # Serve anything else from /usr/share/nginx/html
      location / {
        alias /usr/share/nginx/html/;
      }
    }

}


