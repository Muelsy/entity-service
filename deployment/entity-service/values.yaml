rbac:
  # TODO
  create: false

# TODO keep?
Name: "entityservice"

api:

  ## Deployment component name
  name: server
  # Defines the serviceAccountName to use when `rbac.create=false`
  serviceAccountName: default

  replicaCount: 1

  ## api Deployment Strategy type
  # strategy:
  #   type: Recreate

  ## Annotations to be added to api pods
  ##
  podAnnotations: {}
    # iam.amazonaws.com/role: linkage

  # Settings for the nginx proxy
  www:

    image:
      repository: quay.io/n1analytics/entity-nginx
      tag: "v1.3.2"
      ## "IfNotPresent" or "Always"
      pullPolicy: IfNotPresent

    ## Nginx proxy server resource requests and limits
    ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 200m
        memory: 256Mi

  app:

    image:
      repository: quay.io/n1analytics/entity-app
      tag: "v1.7.2"
      ## "IfNotPresent" or "Always"
      pullPolicy: IfNotPresent

    ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 1Gi

    debug: "false"


  ingress:
    enabled: true

    ## Prometheus server Ingress annotations
    ##
    annotations: []
    #  kubernetes.io/ingress.class: nginx

    ## Entity Service API Ingress hostnames
    ## Must be provided if Ingress is enabled
    hosts:
     - beta.entityservice.edn.io

    ## Entity Service API Ingress TLS configuration
    ## Secrets must be manually created in the namespace
    ##
    tls: []
    #  - secretName: entity-service-tls
    #    hosts:
    #      - beta.entityservice.edn.io

  service:
    annotations: []
    labels:
      tier: frontend
    clusterIp: ""

    ## Expose the service to be accessed from outside the cluster (LoadBalancer service).
    ## or access it from within the cluster (ClusterIP service).
    ## Set the service type and the port to serve it.
    ## ref: http://kubernetes.io/docs/user-guide/services/
    ## Most likely if ingress is enabled, this should be ClusterIP,
    ## Otherwise LoadBalancer. Note you should manually adjust the timeout on
    ## an AWS ELB to 300+ seconds (from the default of 60).
    type: ClusterIP

    servicePort: 80

    ## If using a load balancer on AWS you can optionally lock down access
    ## to a given IP range. Provide a list of IPs that are allowed via a
    ## security group.
    loadBalancerSourceRanges: []
    ##  - 130.155.157.0/24

workers:
  name: "matcher"

  image:
    repository: "quay.io/n1analytics/entity-app"
    tag: "v1.7.2"
    pullPolicy: IfNotPresent

  ## Usually this is set to 1 per compute node
  replicaCount: 3
  debug: "false"

  podAnnotations: {}

  #strategy: ""

  ## Additional Entity Service Worker container arguments
  ##
  extraArgs: {}

  # TODO move these settings into a config file

  SMALL_COMPARISON_CHUNK_SIZE: "100000000"
  LARGE_COMPARISON_CHUNK_SIZE: "1000000000"

  # A minimum of say 100M because any smaller than
  # this isn't worth splitting across nodes.
  SMALL_JOB_SIZE: "100000000"
  LARGE_JOB_SIZE: "100000000000"

  # Default threshold for considering something a match
  MATCH_THRESHOLD: "0.95"

  # More than this many entities and we skip caching in redis
  MAX_CACHE_SIZE: "1000000"

  celery:
    PREFETCH_MULTIPLIER: "1"
    MAX_TASKS_PER_CHILD: "10"
    ACKS_LATE: "true"

  monitor:
    enabled: false

  ## https://kubernetes.io/docs/user-guide/compute-resources
  resources:
    requests:
      memory: 1Gi
      cpu: 100m
    limits:
      memory: 2Gi
      cpu: 200m

postgresql:
  # See available settings and defaults at:
  # https://github.com/kubernetes/charts/tree/master/stable/postgresql
  nameOverride: "db"
  postgresPassword: "x925SvzX6cuH"
  persistence:
    enabled: true
    storageClass: "default"
    size: 4Gi
  imageTag: 10
  imagePullPolicy: IfNotPresent
  metrics:
    enabled: true
  resources:
    limits:
      #memory: 8Gi
    requests:
      #memory: 1Gi
      cpu: 100m

redis:
  # https://github.com/kubernetes/charts/tree/master/stable/redis#configuration
  redisPassword: "gOgRockEPtiN"
  persistence:
    enabled: true
    storageClass: "default"
    size: "10Gi"
  metrics:
    enabled: true
  resources:
    requests:
      #memory: 8Gi
      cpu: 200m
    limits:
      #memory: 20Gi
      cpu: 300m
  nameOverride: "redis"

minio:
  # https://github.com/kubernetes/charts/tree/master/stable/minio#configuration
  ## Can distribute the object store across multiple nodes...
  #mode: "distributed"
  serviceType: "ClusterIP"
  persistence:
    size: 100Gi
    storageClass: "default"
  accessKey: "SNANDoWeruDenOCongsA"
  secretKey: "onimoUBRANeRNaLDeTyWrENTipHErYPrON"
  nameOverride: "minio"
