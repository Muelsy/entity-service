Name: "entityservice"

domain: "es.data61.xyz"
domainProvider: "route53"


api:
  imageRegistery: "quay.io/n1analytics"

  ## "IfNotPresent" or "Always"
  imagePullPolicy: "Always"

  ## Expose the service to be accessed from outside the cluster (LoadBalancer service).
  ## or access it from within the cluster (ClusterIP service).
  ## Set the service type and the port to serve it.
  ## ref: http://kubernetes.io/docs/user-guide/services/
  serviceType: "LoadBalancer"
  servicePort: 80

  ## If using a load balancer on AWS you can optionally lock down access
  ## to a given IP range. Provide a list of IPs that are allowed via a
  ## security group.
  #serviceSourceRanges:
  #  - 130.155.157.0/24

  www:
    image: "entity-nginx"
    tag: "v1.2.4"
    memory: 256Mi
    cpu: 250m
    containerPort: 8851
  app:
    image: "entity-app"
    memory: 2048Mi
    tag: "v1.4.1"
    debug: "true"
    containerPort: 8000
  Replicas: 1

workers:
  imageRegistery: "quay.io/n1analytics"
  image: "entity-app"
  tag: "v1.4.1"
  replicas: 1
  debug: "true"


postgresql:
  postgresPassword: "x925SvzX6cuH"
  persistence:
    persistence.enabled: false
    persistence.storageClass: "slow"
    size: 20Gi
  image:
    pullPolicy: Always

redis:
  redisPassword: "gOgRockEPtiN"
  persistence:
    persistence.storageClass: "slow"

minio:
  persistence:
    persistence.storageClass: "slow"
  accessKey: "AKIAIOSFODNN7EXAMPLE"
  secretKey: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
